#!/usr/bin/env bash

usage() { echo -e "Usage:\t$(basename "$0") <low> <high> <check>" && exit 1; }
[ $# -eq 0 ] && usage

while getopts ":l:h:c:" opt; do
  case $opt in
  l) low=$OPTARG ;;
  h) high=$OPTARG ;;
  c) check=$OPTARG ;;
  *) usage ;;
  esac
done

# kill other instances if found
for pid in $(pidof -x "$(basename "$0")"); do
  [ "$pid" -ne $$ ] || kill -9 "$pid"
done

low=$1
high=$2
check=$3

while true; do
  bat_path=$(upower -e | grep BAT)
  cur_lvl=$(upower -i "$bat_path" | grep -E "percentage" | sed 's/[^0-9]//g')
  discharging=$(upower -i "$bat_path" | grep -E "state" | grep -c discharging)
  time_left=$(upower -i "$bat_path" | grep -E "time to empty" | sed 's/[^0-9,.]//g')

  # low and discharging
  if [ "$cur_lvl" -le "$low" ] && [ "$discharging" -eq 1 ]; then
    dunstify -a "Battery" \
      -u URGENT \
      -r 100 \
      -i ~/.icons/battery.svg \
      "Low battery: $cur_lvl%" \
      "Time left: $time_left. Charge it!"
  # high and charging
  elif [ "$cur_lvl" -ge "$high" ] && [ "$discharging" -eq 0 ]; then
    dunstify -a "Battery" \
      -u NORMAL \
      -r 100 \
      -i ~/.icons/battery.svg \
      "Battery charged: $cur_lvl%" \
      "Unplug the AC adapter."
  fi

  sleep "$check"
done
