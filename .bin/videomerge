#!/usr/bin/env bash

usage() { echo -e "Usage:\t$(basename "$0") -d <directory> -f <format> -r <resolution>" && exit 1; }
[ $# -eq 0 ] && usage

while getopts ":hd:f:r:" opt; do
  case $opt in
  d) dir=$OPTARG ;;
  f) fmt=$OPTARG ;;
  r) res=$OPTARG ;;
  h | *) usage ;;
  esac
done

if [ ! -d "$dir" ]; then
  echo "\"$dir\" is not a valid directory" && exit 1
fi

# Ask if vids have been manually sorted by name
while [[ ! "$sorted" =~ ^YES|n$ ]]; do
  read -rp "Are all the vids already sorted by name? (YES|n): " sorted
done
[ "$sorted" = "YES" ] || {
  echo "Manually sort your vids first by renaming them"
  exit 1
}

# Add filter to all vids
pushd "$dir" || exit 1
mkdir -p merging_dir
i=1
IFS=$'\n'
for filtering_vid in ./*."$fmt"; do
  ffmpeg -y -i "$filtering_vid" \
    -vf "color=c=gray:s=$res:d=2 [post] ; [in] [post] concat=n=2" \
    "$PWD/merging_dir/filtered_vid$i.$fmt" && rm -fv "$filtering_vid"
  ((i += 1))
done

# Merge filtered vids into output "%H:%M:%S.fmt" vid
pushd merging_dir || exit 1
ffmpeg -y -f concat -safe 0 \
  -i <(for filtered_vid in ./*."$fmt"; do echo "file '$PWD/$filtered_vid'"; done) \
  -c copy ../"$(date +%X).$fmt"
popd || exit 1 # $dir
rmdir merging_dir

# End
while [[ ! "$delete_vids" =~ ^YES|n$ ]]; do
  read -rp "Do you want to delete the original videos? (YES|n): " delete_vids
done
[ "$delete_vids" = "YES" ] && rm -fv ./*."$fmt"
popd || exit 1 # $PWD
